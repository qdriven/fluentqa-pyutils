# Poetry pyproject.toml: https://python-poetry.org/docs/pyproject/
[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "qpyone"
version = "0.1.0"
description = " qpyone, a daily qa pytoolkits "
readme = "README.md"
authors = ["fluentqa <hello@fluentqa.xyz>"]
repository = "https://github.com/fluentqa/qpyone"
homepage = "https://github.com/fluentqa/qpyone"
packages = [
    { include = "qpyone",from="src" },
]

# Keywords description https://python-poetry.org/docs/pyproject/#keywords
keywords = ["QA Python Lib", "Testing", "Software QA Python Libs",
  "Living Tutorials For QA"]  #! Update me

# Pypi classifiers: https://pypi.org/classifiers/
classifiers = [#! Update me
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
]

[tool.poetry.dependencies]
python = ">=3.10"


[tool.poetry.group.test.dependencies]
pytest = "^7.4.4"


[tool.pytest.ini_options]
# https://docs.pytest.org/en/6.2.x/customize.html#pyproject-toml
# Directories that are not visited by pytp collector:
norecursedirs = ["hooks", "*.egg", ".eggs", "dist", "build", "docs", ".tox", ".git", "__pycache__"]
doctest_optionflags = ["NUMBER", "NORMALIZE_WHITESPACE", "IGNORE_EXCEPTION_DETAIL"]

# Extra options:
addopts = [
  "--strict-markers",
  "--tb=short",
  "--doctest-modules",
  "--doctest-continue-on-failure",
]

[tool.coverage.run]
source = ["tests"]

[coverage.paths]
source = "qpyone"

[coverage.run]
branch = true

[coverage.report]
fail_under = 50
show_missing = true
